Мета роботи:
Розробка клієнтської / front-end частини програмної системи моніторингу землі для сільськогосподарських потреб. Ця частина системи повинна підтримувати роботу клієнтів у веб-режимі та  забезпечувати адміністрування системи.

Хід роботи:

1	ОПИС АРХІТЕКТУРИ КЛІЄНТСЬКОЇ ЧАСТИНИ

Клієнтська частина системи моніторингу землі для сільськогосподарських потреб розроблена з використанням React - популярної бібліотеки JavaScript для створення користувацьких інтерфейсів. Архітектура клієнтської частини базується на компонентному підході, що забезпечує модульність, повторне використання коду та легкість в обслуговуванні. 
Основні компоненти архітектури: App.js: 
1.	Це кореневий компонент, який відповідає за загальну структуру додатку, маршрутизацію та управління станом авторизації. 
2.	Dashboard.js: Компонент панелі управління, який відображає дані з сенсорів у вигляді графіків. 
3.	AdminPanel.js: Компонент панелі адміністратора для управління користувачами та даними. 
4.	Recommendations.js: Компонент, який відображає рекомендації на основі даних сенсорів. 
5.	Login.js та Register.js: Компоненти для авторизації та реєстрації користувачів. 
6.	UserManagement.js: Компонент для управління користувачами (в рамках AdminPanel). 
7.	DataManagement.js: Компонент для імпорту та експорту даних (в рамках AdminPanel). 
Архітектурні особливості: 
1.	Компонентний підхід: Кожен функціональний елемент системи реалізований як окремий React-компонент, що забезпечує модульність та повторне використання коду. 
2.	Маршрутизація: Використовується React Router для навігації між різними сторінками додатку. 
3.	Управління станом: Локальний стан компонентів використовується для зберігання та управління даними на рівні компонентів. 
4.	Інтернаціоналізація: Реалізована з використанням бібліотеки i18next для підтримки багатомовності. 
5.	HTTP-запити: Axios використовується для здійснення HTTP-запитів до серверної частини. 
6.	Візуалізація даних: Бібліотека Recharts застосовується для створення графіків та візуалізації даних сенсорів. 
7.	UI компоненти: Material-UI (MUI) використовується для створення сучасного та респонсивного інтерфейсу користувача.

2	ПОБУДОВА ДІАГРАМИ ПРЕЦЕДЕНТІВ

У додатку А на рисунку 1 зображено діаграму прецедентів для клієнтської частини системи моніторингу землі. Ця діаграма відображає основну функціональність системи та взаємодію користувачів з нею.

3	ПОБУДОВА ДІАГРАМИ КОМПОНЕНТ

Опис компонентів:
1.	App: Головний компонент, який об'єднує всі інші компоненти. 
2.	React Router: Відповідає за маршрутизацію в додатку. 
3.	i18n: Компонент для інтернаціоналізації. 
4.	Login: Компонент для авторизації. 
5.	Register: Компонент для реєстрації. 
6.	Dashboard: Компонент панелі управління. 
7.	Charts: Підкомпонент для відображення графіків. 
8.	AdminPanel: Компонент панелі адміністратора, який включає: 
–	User Management: Підкомпонент для управління користувачами. 
–	Data Management: Підкомпонент для управління даними. 
9.	Recommendations: Компонент для відображення рекомендацій. 
10.	Axios: Бібліотека для HTTP-запитів. 
Ця діаграма компонент (див. рис.2, додаток Б) показує модульну структуру нашого додатку, де кожен компонент відповідає за певну функціональність. Вона також демонструє залежності між компонентами, наприклад, як компонент Dashboard використовує Charts для візуалізації даних, або як API Services використовує Axios для здійснення запитів.

4	ПОБУДОВА ДІАГРАМИ ВЗАЄМОДІЇ

У додатку В на рисунку 3 зображено діаграму взаємодії для клієнтської частини системи моніторингу землі. Ця діаграма показує основні потоки взаємодії між користувачем, компонентами клієнтської частини та API сервера. Вона демонструє послідовність дій при авторизації, перегляді даних сенсорів, отриманні рекомендацій та керуванні користувачами в панелі адміністратора.

5	ПОБУДОВА ДІАГРАМИ СТАНІВ	

Рисунок 4 – Діаграма станів

На рисунку 4 зображено діаграму станів для клієнтської частини системи моніторингу землі. Ця діаграма відображає основні стани, в яких може перебувати клієнтська частина системи, та можливі переходи між цими станами: 
1.	Система починає роботу в неавторизованому стані. 
2.	Після успішної авторизації користувач потрапляє на головну панель. 
3.	З головної панелі користувач може перейти до різних функціональних станів: перегляд даних сенсорів, управління рекомендаціями, адміністративна панель (для адміністраторів). 
4.	З будь-якого стану можна повернутися на головну панель. 
5.	Вихід з системи повертає користувача до неавторизованого стану.

Висновки:
У ході даної лабораторної роботи ми успішно розробили клієнтську / front-end частину програмної системи моніторингу землі для сільськогосподарських потреб з використанням React.

Посилання на демо-відео:
https://www.youtube.com/watch?v=IdSY0eYVaGY
Посилання на репозиторій GitHub:
https://github.com/NureShevchenkoIvan/apz-pzpi-21-8-shevchenko-ivan
 
ДОДАТОК А

Рисунок 1 – Діаграма прецедентів
 
ДОДАТОК Б

Рисунок 2 – Діаграма компонент
 
ДОДАТОК В

Рисунок 3 – Діаграма взаємодії